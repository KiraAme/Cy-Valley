 
- matrice de 10 000 cases (format 100x100)
- Surfaces : 
        - rocher       proba : 10%
        - herbes/rien  proba : 35%
        - arbres       proba : 5%
        - sable        proba : 25%
        - fleurs       proba : 5%
	- PNJ          proba : 1 seul pnj
        - (eau si le temps)
- Obstacle indestructible et infranchissable : Arbre   
-    "      destructible et infranchissable : rocher (avec pioche) 
-    "      destructile et franchissable : fleurs (ramassable)     
-    "      déplacable : caisse en bois     


"au moins 2 élèments de l'inventaire sont limités en nombres"



----------
type de structure pour les surfaces:
typedef Struct{
  int break (vaut 0 ou 1);
  int take (vaut 0 ou 1);
  int push (vaut 0 ou 1);
  int go_through (vaut 0 ou 1);
} Surface;

d'abord vérifier si la surface est franchissable (gothrough)
ensuite si elle ne l'est pas verifier si c'est un rocher, un arbre ou une caisse
ensuite demander quelle(s) action(s) faire (deplacer, casser ect)
si c'est une fleur demander si on souhaite la ramasser 

-----
idée de quête pour debloquer la pioche: récupérer x nombre de fleurs
idée de quête: casser x rochers
idée de quête: affronter x ennemis (si ennemis il y a)
-----
ajouter une surface humain pour les quetes avec qui ont pourra interagir (ex: obtenir une quetes)
+ ajouter une surface maison où il y aurait le pnj et en se rendant à cette maison, on pourrait soit interagir avec le pnj, soit déposer des objets dans un coffre (un inventaire externe fixe et utilisable uniquement lorsque l'on est sur la surface maison)(à voir si c'est possible)
-----
idée conditions de victoires:
 -accomplir toutes les quêtes 
 -avoir récupéré toutes les fleurs de la carte et détruit tous les rochers
 -en cassant un rocher récupérer un objet (style 0,1% de chance d'obtention) qui ferait instant win
 -éliminer tous les ennemis display sur la carte
 -interagir pour la x-ieme fois avec le pnj ferait gagner
-----
idée conditions de defaite:
 -plus de point de vie (classique)
 -ne pas avoir fini toutes les quetes en x minutes
 -obtenir un objet en cassant un rocher qui ferait instant lose (ex 0.01 chance d'obtention)
-----

idee de structure pour le joueur:

typedef Struct{
	float health_point;
	Inv inventory;( issue d'une structure Inv)
	int quest_advancement (pour pouvoir utiliser un switch quand on interagit avec le pnj);
} Player;

idee de structure pour l'inventaire:

typesef Struct{
	int flower_num;
	int have_pickaxe;
	int item_1; ( en fonction de quels items on rajoute ect)
	ect...
} Inv;

idee de structure pour les ennemis 

typedef Struct{
	int ad;
	float health_point;
	char* weapon;
	ect;
} Mob;

-----
idée pour perdre des hp:
 -quand on casse un rocher on peut prendre des degats ex 0.5 point de degats à 5% de chance
 -dégâts d'ennemis (si il y a)
 - tres faible taux mais possibilité de glisser et tomber quand le joueur bouge
 
 -----
 Idée pour gagner des hp :
   - Récolter des baies 
   - Manger des fleurs (on pourrait déclarer un int avec un rand et si ce chiffre est compris entre un certain encadrement (proba), la fleur est commestible est donc gain de hp) 
   - grâce à l'eau (s'il y a)
 -----
 Idée pour l'inventaire :
   - Taille de l'inventaire : entre 10 et 30
   - fleurs (limite de 10 fleurs à la fois)
   - baies (s'il y a)
   - pioche
   - roche (limite de 8 roches à la fois
